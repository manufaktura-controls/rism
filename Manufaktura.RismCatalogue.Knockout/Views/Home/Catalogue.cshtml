@{
    ViewData["Title"] = "Home Page";
}

@section scripts {
<environment include="Development">
    <script src="~/js/SearchViewModel.js"></script>
    <script src="~/js/InfiniteScrollManager.js"></script>
</environment>
<environment exclude="Development">
    <script src="~/js/SearchViewModel.min.js"></script>
    <script src="~/js/InfiniteScrollManager.min.js"></script>
</environment>
}

<div class='container-fluid'>
    <div class='row'>
        <div class='col-sm-3 nopadding'>
            <div class='main-nav'>
                <div class='navbar navbar-inverse'>
                    <div class='navbar-header'>
                        <button type='button' class='navbar-toggle' data-toggle='collapse' data-target='.navbar-collapse'>
                            <span class='sr-only'>Toggle navigation</span>
                            <span class='icon-bar'></span>
                            <span class='icon-bar'></span>
                            <span class='icon-bar'></span>
                        </button>
                    </div>
                    <div class='clearfix'></div>
                    <div class='navbar-collapse collapse'>
                        <div id="searchPanel">
                            <h1>Incipit Search</h1>
                            <blazorhost><i class="fa fa-spinner fa-spin" style="font-size: 30px;"></i></blazorhost>
                            <ul class='nav navbar-nav'></ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-9 nopadding">
            <div data-bind="if: !isLoading() && results().length == 0">
                <h1>No Results.</h1>
            </div>
            <div id="resultList" data-bind="foreach: results">
                <div class="list-item">
                    <div>
                        <h2>
                            <span class="relevance-badge" data-bind="text: $parent.formatRelevance(relevance), visible: showRelevance"></span><a data-bind="attr: {href: $parent.getRismLink(recordId)}" target="_blank"><span data-bind="text: title"></span></a> <small><span data-bind="text: composerName"></span></small>
                            <!-- ko if: incipitSvg && incipitSvg.length > 0 -->
                            <button data-bind="attr: {'id': 'btnPlay-' + id}, click: function() { $parent.player.play(id);}, visible: !$parent.player.isPlaying() || $parent.player.currentMelodyId() != id" class="btn"><i class="fa fa-play-circle"></i> <span data-bind="text: voice"></span></button>
                            <button class="btn" data-bind="attr: {'id': 'btnStop-' + id}, click: $parent.player.stop, , visible: $parent.player.isPlaying() && $parent.player.currentMelodyId() == id" style="display:none"><i class="fa fa-stop-circle"></i> Stop</button>
                            <span data-bind="html: plaineAndEasieCode"></span>
                            <!-- /ko -->
                        </h2>
                        <!-- ko if: captionOrHeading && captionOrHeading.length > 0 -->
                        <h3>
                            <span data-bind="text: captionOrHeading"></span>
                        </h3>
                        <!-- /ko -->
                        <i><span data-bind="text: textIncipit"></span></i>
                    </div>
                    <div data-bind="html: incipitSvg, attr: {'id': 'melody-' + id}"></div>
                </div>
                    <hr />

            </div>
            <i class="fa fa-spinner fa-spin" style="font-size: 30px;" data-bind="visible: isLoading()"></i>
        </div>
    </div>
</div>

<script type="text/javascript">
    window.onload = function (e) {
        var vm = new SearchViewModel();
        ko.applyBindings(vm);
        vm.getMoreResults();
        new InfiniteScrollManager(document.getElementById("resultList"), 200, vm.getMoreResults);
        window.viewModel = vm;

        MIDI.loadPlugin({
            soundfontUrl: "./soundfonts/",
            instrument: "acoustic_grand_piano",
            onprogress: function (state, progress) {
                console.log(state, progress);
            },
            onsuccess: function () {
                MIDI.setVolume(0, 127);
            }
        });
    };
</script>